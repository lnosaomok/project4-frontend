[{"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/index.js":"1","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/App.js":"2","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/layout/About.js":"3","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/layout/Login.js":"4","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/layout/Navbar.js":"5","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/alert/AlertState.js":"6","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/alerts/Alerts.js":"7","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/layout/Register.js":"8","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/auth/AuthState.js":"9","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/alert/AlertReducer.js":"10","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/auth/AuthContext.js":"11","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/alert/AlertContext.js":"12","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/types.js":"13","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/auth/AuthReducer.js":"14","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/utils/setToken.js":"15","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/recipes/RecipesContext.js":"16","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/recipes/RecipesState.js":"17","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/recipes/RecipesReducer.js":"18","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/layout/Spinner.js":"19","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/NutritionTable.js":"20","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/NutritionTableForModal.js":"21","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/CollectionButton.js":"22","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/messages/MessagesState.js":"23","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/messages/MessagesContext.js":"24","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/messages/MessagesReducer.js":"25","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/utils/useInitializeListeners.js":"26","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/RecommendedRecipes.js":"27","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/RecommendedRecipesItem.js":"28","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/ViewRecipe.js":"29","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/SavedRecipiesIndex.js":"30","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/SavedRecipesView.js":"31","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/messages/AllMessages.js":"32","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/messages/AllMessagesItem.js":"33","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/RecipeReviews.js":"34","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/RecipeReviewItem.js":"35","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/CreateRecipe.js":"36","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/ImageTileList.js":"37","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/FilterRecommended.js":"38","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/messages/AddPostModal.js":"39","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/messages/ViewPost.js":"40","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/Routing/PrivateRoute.js":"41","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/Modals/RatingModal.js":"42","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/Modals/UploadModal.js":"43","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/Modals/NutritionModal.js":"44","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/Modals/ImagesViewModal.js":"45"},{"size":197,"mtime":1607976830404,"results":"46","hashOfConfig":"47"},{"size":2951,"mtime":1608359609962,"results":"48","hashOfConfig":"47"},{"size":165,"mtime":1608091138197,"results":"49","hashOfConfig":"47"},{"size":2993,"mtime":1608291114473,"results":"50","hashOfConfig":"47"},{"size":1807,"mtime":1608359171578,"results":"51","hashOfConfig":"47"},{"size":783,"mtime":1608297872277,"results":"52","hashOfConfig":"47"},{"size":451,"mtime":1607974414059,"results":"53","hashOfConfig":"47"},{"size":3733,"mtime":1608291132673,"results":"54","hashOfConfig":"47"},{"size":2727,"mtime":1608361210633,"results":"55","hashOfConfig":"47"},{"size":307,"mtime":1607974175966,"results":"56","hashOfConfig":"47"},{"size":106,"mtime":1607974221202,"results":"57","hashOfConfig":"47"},{"size":108,"mtime":1607974175958,"results":"58","hashOfConfig":"47"},{"size":1688,"mtime":1608278638623,"results":"59","hashOfConfig":"47"},{"size":1169,"mtime":1607974243889,"results":"60","hashOfConfig":"47"},{"size":242,"mtime":1607973915076,"results":"61","hashOfConfig":"47"},{"size":112,"mtime":1608021982790,"results":"62","hashOfConfig":"47"},{"size":2756,"mtime":1608361254542,"results":"63","hashOfConfig":"47"},{"size":737,"mtime":1608357048238,"results":"64","hashOfConfig":"47"},{"size":375,"mtime":1608357970810,"results":"65","hashOfConfig":"47"},{"size":2837,"mtime":1608355620434,"results":"66","hashOfConfig":"47"},{"size":2268,"mtime":1608100945382,"results":"67","hashOfConfig":"47"},{"size":1743,"mtime":1608355122977,"results":"68","hashOfConfig":"47"},{"size":6520,"mtime":1608357252151,"results":"69","hashOfConfig":"47"},{"size":114,"mtime":1608147597311,"results":"70","hashOfConfig":"47"},{"size":2146,"mtime":1608287420932,"results":"71","hashOfConfig":"47"},{"size":1546,"mtime":1608357117571,"results":"72","hashOfConfig":"47"},{"size":2096,"mtime":1608355960581,"results":"73","hashOfConfig":"47"},{"size":5030,"mtime":1608356250436,"results":"74","hashOfConfig":"47"},{"size":6854,"mtime":1608357643831,"results":"75","hashOfConfig":"47"},{"size":9258,"mtime":1608357625184,"results":"76","hashOfConfig":"47"},{"size":8586,"mtime":1608357568316,"results":"77","hashOfConfig":"47"},{"size":1499,"mtime":1608360427640,"results":"78","hashOfConfig":"47"},{"size":2214,"mtime":1608358829271,"results":"79","hashOfConfig":"47"},{"size":448,"mtime":1608293440629,"results":"80","hashOfConfig":"47"},{"size":2321,"mtime":1608293087730,"results":"81","hashOfConfig":"47"},{"size":9183,"mtime":1608355447217,"results":"82","hashOfConfig":"47"},{"size":1186,"mtime":1608355530530,"results":"83","hashOfConfig":"47"},{"size":1478,"mtime":1608355511130,"results":"84","hashOfConfig":"47"},{"size":2216,"mtime":1608358742686,"results":"85","hashOfConfig":"47"},{"size":4596,"mtime":1608358889524,"results":"86","hashOfConfig":"47"},{"size":501,"mtime":1608294592092,"results":"87","hashOfConfig":"47"},{"size":3921,"mtime":1608357705957,"results":"88","hashOfConfig":"47"},{"size":2367,"mtime":1608357743625,"results":"89","hashOfConfig":"47"},{"size":1562,"mtime":1608357817029,"results":"90","hashOfConfig":"47"},{"size":1229,"mtime":1608357784746,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"el3rk9",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"99"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"94"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/index.js",[],["206","207"],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/App.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/layout/About.js",[],["208","209"],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/layout/Login.js",["210"],"import React, { useContext, useState, useEffect } from \"react\";\nimport AuthContext from \"../../context/auth/AuthContext\";\nimport AlertContext from \"../../context/alert/AlertContext\";\n\nconst Login = (props) => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const { setAlert } = alertContext;\n  const { login, error, clearErrors, isAuthenticated } = authContext;\n\n  const [userData, setUserData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const { username, password } = userData;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n    if (error === \"Invalid Credentials\") {\n      setAlert(error, \"danger\");\n      clearErrors();\n    }\n  }, [error, isAuthenticated, props.history]);\n\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    if (username === \"\" || password === \"\") {\n      setAlert(\"Please fill in all fields\", \"danger\");\n    } else {\n      login({\n        username,\n        password,\n      });\n    }\n  };\n\n  return (\n    <div class='container' id='container'>\n      <div className='register'>\n        <h4 className='special-font'>Login to your account</h4>\n        <form\n          className='col s6'\n          onSubmit={(e) => {\n            onSubmitForm(e);\n          }}\n        >\n          <div className='row'>\n            <div className='input-field col s12'>\n              <input\n                id='round'\n                type='text'\n                placeholder='username'\n                name='username'\n                value={username}\n                autoComplete='off'\n                onChange={(e) => {\n                  onChange(e);\n                }}\n              />\n              <span\n                className='helper-text'\n                data-error='wrong'\n                data-success='right'\n              >\n                Username must be minimun 6 characters\n              </span>\n            </div>\n            <div className='input-field col s12'>\n              <input\n                id='round'\n                type='text'\n                placeholder='password'\n                name='password'\n                autoComplete='off'\n                value={password}\n                onChange={(e) => {\n                  onChange(e);\n                }}\n              />\n              <span\n                className='helper-text'\n                data-error='wrong'\n                data-success='right'\n              >\n                Password must be minimun 6 characters\n              </span>\n            </div>\n\n            <div className=''>\n              <button\n                className='button-btn waves-effect waves-light'\n                type='submit'\n                id='sign-in'\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/layout/Navbar.js",["211","212"],"import React, { useEffect, Fragment, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/AuthContext\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Navbar = (props) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, logout, user, loadUser } = authContext;\n  useEffect(() => {\n    loadUser();\n    // eslint-disable-next-line\n  }, []);\n\n  const onLogout = async () => {\n    await logout();\n    <Redirect to='/login' />;\n  };\n\n  const authLinks = (\n    <Fragment>\n      <li>\n        <Link to='/'>Home</Link>\n      </li>\n      <li>|</li>\n\n      <li>\n        <Link to='/recommended'> Recommended Recipes</Link>\n      </li>\n      <li>|</li>\n      <li>\n        <Link to='/savedrecipes/0'> Saved Recipes</Link>\n      </li>\n      <li>|</li>\n      <li>\n        <Link to='/create'> Create Recipe</Link>\n      </li>\n      <li>|</li>\n      <li>\n        <Link to='/allmessages'> All Messages</Link>\n      </li>\n      <li>|</li>\n      <li>Hello {user && user.username}</li>\n      <li>\n        <a onClick={onLogout}>\n          Logout <i className='material-icons right'>arrow_back</i>\n          <span className='hide'>Logout</span>\n        </a>\n      </li>\n    </Fragment>\n  );\n\n  const guestLinks = (\n    <Fragment>\n      <li>\n        <Link to='/register'> Register </Link>\n      </li>\n      <li>\n        <Link to='/login'> Login </Link>\n      </li>\n    </Fragment>\n  );\n  return (\n    <>\n      <nav>\n        <div className='nav-wrapper'>\n          <a href='#' className='brand-logo special-font'>\n            Chefs' Place\n          </a>\n          <ul id='nav-mobile' className='right '>\n            {isAuthenticated ? authLinks : guestLinks}\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/alert/AlertState.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/alerts/Alerts.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/layout/Register.js",["213"],"import React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../../context/auth/AuthContext\";\nimport AlertContext from \"../../context/alert/AlertContext\";\n\nconst Register = (props) => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const { setAlert } = alertContext;\n  const { register, error, clearErrors, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.goBack();\n    }\n    if (error) {\n      setAlert(error, \"danger\");\n      clearErrors();\n    }\n  }, [error, isAuthenticated, props.history]);\n\n  const [userData, setUserData] = useState({\n    username: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { username, password, password2 } = userData;\n\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n\n    if (username === \"\" || password === \"\" || password2 === \"\") {\n      setAlert(\"Please enter all fields\", \"danger\");\n    } else if (password !== password2) {\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else {\n      register({\n        username,\n        password,\n      });\n    }\n  };\n  return (\n    <div class='container' id='container'>\n      <div className='register'>\n        <h4 className='special-font'>Create a Login</h4>\n        <form\n          className='col s6'\n          onSubmit={(e) => {\n            onSubmitForm(e);\n          }}\n        >\n          <div className='row'>\n            <div className='input-field col s12'>\n              <input\n                id='round'\n                type='text'\n                placeholder='username'\n                name='username'\n                value={username}\n                autoComplete='off'\n                onChange={(e) => {\n                  onChange(e);\n                }}\n              />\n              <span\n                className='helper-text'\n                data-error='wrong'\n                data-success='right'\n              >\n                Username must be minimum 6 characters\n              </span>\n            </div>\n            <div className='input-field col s12'>\n              <input\n                id='round'\n                type='text'\n                placeholder='password'\n                name='password'\n                value={password}\n                autoComplete='off'\n                onChange={(e) => {\n                  onChange(e);\n                }}\n              />\n              <span\n                className='helper-text'\n                data-error='wrong'\n                data-success='right'\n              >\n                Password must be minimun 6 characters\n              </span>\n            </div>\n\n            <div className='input-field col s12'>\n              <input\n                id='round'\n                type='text'\n                placeholder='confirm password'\n                value={password2}\n                autoComplete='off'\n                name='password2'\n                onChange={(e) => {\n                  onChange(e);\n                }}\n              />\n              <span\n                className='helper-text'\n                data-error='wrong'\n                data-success='right'\n              >\n                Password must be minimun 6 characters\n              </span>\n            </div>\n\n            <div className=''>\n              <button\n                className='button-btn waves-effect waves-light'\n                type='submit'\n                id='sign-in'\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/auth/AuthState.js",["214"],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/alert/AlertReducer.js",["215"],"import { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/auth/AuthContext.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/alert/AlertContext.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/types.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/auth/AuthReducer.js",["216","217"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n  }\n};\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/utils/setToken.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/recipes/RecipesContext.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/recipes/RecipesState.js",["218","219"],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/recipes/RecipesReducer.js",["220","221"],"import {\n  GENERAL_ERROR,\n  GET_SAVED_RECIPES,\n  SET_NUTRITION_OBJECT,\n  SAVE_RECIPE,\n  SET_HEALTH_LABELS,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_NUTRITION_OBJECT:\n      return {\n        ...state,\n        nutritionObject: action.payload,\n      };\n\n    case SET_HEALTH_LABELS:\n      return {\n        ...state,\n        healthLabels: action.payload,\n      };\n\n    case GET_SAVED_RECIPES:\n      return {\n        ...state,\n        saved_recipes: action.payload,\n        loading: false,\n      };\n    case SAVE_RECIPE:\n      return {\n        ...state,\n        loading: false,\n      };\n    case GENERAL_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n  }\n};\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/layout/Spinner.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/NutritionTable.js",["222","223"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nexport default function NutritionTable({ allNutrients }) {\n  const columns = [\n    { id: \"name\", label: \"Name\", minWidth: 170 },\n    {\n      id: \"daily\",\n      label: \"Daily\",\n      minWidth: 170,\n      align: \"right\",\n    },\n  ];\n\n  function createData(name, daily) {\n    return { name, daily };\n  }\n\n  let rows = [];\n\n  if (allNutrients) {\n    let allNutrientsFiltered = allNutrients.filter((nutrient) => {\n      return (\n        nutrient !== null && nutrient !== \"undefined\" && nutrient !== undefined\n      );\n    });\n    allNutrientsFiltered.forEach((element) => {\n      if (element !== undefined) {\n        const quantity = `${element.quantity.toFixed()}${element.unit}`;\n        rows.push(createData(element.label, quantity));\n      }\n    });\n  }\n\n  const useStyles = makeStyles({\n    root: {\n      width: \"100%\",\n    },\n    container: {\n      maxHeight: 440,\n    },\n  });\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label='sticky table'>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/NutritionTableForModal.js",["224"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 70,\n  },\n});\n\nexport default function NutritionTableForModal({ allNutrients }) {\n  const classes = useStyles();\n  function createData(name, Daily, percent) {\n    return { name, Daily, percent };\n  }\n  let rows = [];\n\n  if (allNutrients) {\n    console.log(allNutrients);\n    let allNutrientsFiltered = allNutrients.filter((nutrient) => {\n      return (\n        nutrient !== null && nutrient !== \"undefined\" && nutrient !== undefined\n      );\n    });\n    allNutrientsFiltered.forEach((element) => {\n      if (element !== undefined) {\n        const quantity = `${element.quantity.toFixed()}${element.unit}`;\n        rows.push(createData(element.label, quantity));\n      }\n    });\n  }\n\n  //   const rows = [\n  //     createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  //     createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  //     createData('Eclair', 262, 16.0, 24, 6.0),\n  //     createData('Cupcake', 305, 3.7, 67, 4.3),\n  //     createData('Gingerbread', 356, 16.0, 49, 3.9),\n  //   ];\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableHead id='t-head'>\n            <TableRow>\n              <TableCell>Nutrients</TableCell>\n              <TableCell align='right'>%Daily</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component='th' scope='row'>\n                  {row.name}\n                </TableCell>\n                <TableCell align='right'>{row.Daily}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/CollectionButton.js",["225"],"import React, { useContext, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport AuthContext from \"../../context/auth/AuthContext\";\nimport MessagesContext from \"../../context/messages/MessagesContext\";\n\nexport default function CollectionButton({ recipe }) {\n  const messagesContext = useContext(MessagesContext);\n  const {\n    pubsub: { publish },\n  } = messagesContext;\n  const authContext = useContext(AuthContext);\n  const { user } = authContext;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const recommendRecipeEveryone = (e, channelName) => {\n    setAnchorEl(null);\n    let channel = \"RECCOMENDATIONS_CHANNEL\";\n    publish(\n      {\n        recipe,\n        name: user.username,\n      },\n      channel\n    );\n    M.toast({ html: \"Recommendation added!\" });\n  };\n\n  return (\n    <div>\n      <Button\n        aria-controls='simple-menu'\n        aria-haspopup='true'\n        onClick={handleClick}\n        id='focus-transparent'\n      >\n        <span>Recommend Recipe</span>\n        <i class='material-icons'>share</i>\n      </Button>\n\n      <Menu\n        id='simple-menu'\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem\n          id='capitalize'\n          onClick={(e) => {\n            recommendRecipeEveryone(e);\n          }}\n        >\n          Recommend to Everyone\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/messages/MessagesState.js",["226","227","228"],"import React, { useReducer } from \"react\";\nimport MessagesContext from \"./MessagesContext\";\nimport MessagesReducer from \"./MessagesReducer\";\nimport PubNub from \"pubnub\";\nimport pubnubConfig from \"../../pubnub.config.json\";\nimport {\n  ADD_RECCOMENDED_RECIPE,\n  GET_RECCOMENDED_RECIPES,\n  ADD_RECIPE_RATING,\n  GET_RECIPE_RATINGS,\n  GET_IMAGE_FILES,\n  NEW_IMAGE_FILE,\n  FILTER_RECOMMENDED_RECIPES,\n  CLEAR_FILTERED_RECOMMENDED_RECIPES,\n  GET_ALL_POSTS,\n  ADD_POST,\n  ADD_POST_REPLIES,\n  GET_POST_REPLIES,\n} from \"../types\";\n\n/// SET UP CHANNELS\nconst RECCOMENDATIONS_CHANNEL = \"RECCOMENDATIONS_CHANNEL\";\nconst FILE_CHANNEL = \"FILE_CHANNEL\";\nconst ALL_USERS1 = \"ALL_USERS1\";\n\n//SET UP PUB/SUB CONFIGURATION METHODS\n//////////////////////////&&&///////////////////////////////////\nconst pubnub = new PubNub(pubnubConfig);\n\nfunction PubSub() {\n  pubnub.subscribe({\n    channels: [RECCOMENDATIONS_CHANNEL, FILE_CHANNEL, ALL_USERS1],\n  });\n\n  this.addListener = (listenerConfig) => {\n    pubnub.addListener(listenerConfig);\n  };\n\n  this.publish = (message, channel) => {\n    pubnub.publish(\n      {\n        message,\n        channel: channel,\n      },\n      function (status, response) {\n        console.log(status, response);\n      }\n    );\n  };\n  this.addMessageAction = (channel, messageToken, reactionObj) => {\n    pubnub.addMessageAction({\n      channel: channel,\n      messageTimetoken: messageToken,\n      action: {\n        type: \"reaction\",\n        value: reactionObj,\n      },\n\n      function(status, response) {\n        console.log(status, response);\n      },\n    });\n  };\n\n  this.getMessageActions = (channel) => {\n    pubnub.getMessageActions(\n      {\n        channel: channel,\n        limit: 100,\n      },\n      function (status, response) {\n        console.log(status, response);\n      }\n    );\n  };\n\n  this.sendFile = async (file, timetoken) => {\n    const result = await pubnub.sendFile({\n      channel: FILE_CHANNEL,\n      file: file,\n      message: {\n        test: \"message\",\n        value: timetoken,\n      },\n    });\n  };\n\n  this.getFile = (channel, id, name) => {\n    console.log(name);\n    console.log(id);\n    console.log(channel);\n    const result = pubnub.getFileUrl({\n      channel: channel,\n      id: id,\n      name: name,\n    });\n    return result;\n  };\n}\n\nexport const pubsub = new PubSub();\n//////////////////////////&&&///////////////////////////////////\n\nexport const MessagesState = (props) => {\n  const initialState = {\n    reccommended_recipes: [],\n    filtered_recommended_recipes: null,\n    postReplies: [],\n    error: null,\n    loading: true,\n    pubsub: pubsub,\n    recipeRatings: [],\n    imageFilesList: [],\n    allPosts: [],\n  };\n\n  const [state, dispatch] = useReducer(MessagesReducer, initialState);\n\n  const addRecipeRecommendation = (obj) => {\n    dispatch({\n      type: ADD_RECCOMENDED_RECIPE,\n      item: obj,\n    });\n  };\n\n  const getReccomendedRecipes = () => {\n    pubnub\n      .fetchMessages({\n        channels: [RECCOMENDATIONS_CHANNEL],\n        count: 75,\n      })\n      .then(async (res) => {\n        dispatch({\n          type: GET_RECCOMENDED_RECIPES,\n          item: res.channels.RECCOMENDATIONS_CHANNEL,\n        });\n      });\n  };\n\n  const addPost = (obj) => {\n    dispatch({\n      type: ADD_POST,\n      item: obj,\n    });\n  };\n\n  const getAllPosts = () => {\n    pubnub\n      .fetchMessages({\n        channels: [\"ALL_USERS1\"],\n        count: 75,\n      })\n      .then(async (res) => {\n        dispatch({\n          type: GET_ALL_POSTS,\n          item: res.channels.ALL_USERS1,\n        });\n      });\n  };\n\n  const addPostReply = (obj) => {\n    dispatch({\n      type: ADD_POST_REPLIES,\n      item: obj,\n    });\n  };\n\n  const getPostReplies = () => {\n    pubnub\n      .getMessageActions({\n        channel: ALL_USERS1,\n      })\n      .then(async (res) => {\n        dispatch({\n          type: GET_POST_REPLIES,\n          item: res.data,\n        });\n      });\n  };\n\n  const newImageFile = (obj) => {\n    let urlsArr = {};\n\n    let imgVal = pubnub.getFileUrl({\n      channel: \"FILE_CHANNEL\",\n      id: obj.file.id,\n      name: obj.file.name,\n    });\n    let messageVal = obj.message;\n\n    // urlsArr.push({ imgVal, messageVal, timetoken: obj.timetoken });\n\n    dispatch({\n      type: NEW_IMAGE_FILE,\n      item: {\n        channel: obj.channel,\n        imgVal,\n        messageVal,\n        timetoken: obj.timetoken,\n      },\n    });\n  };\n  const getImageFiles = async (channel) => {\n    const imagefiles = await pubnub.fetchMessages({\n      channels: [FILE_CHANNEL],\n\n      count: 175, // default/max is 25\n    });\n\n    let urlsArr = [];\n    if (imagefiles) {\n      imagefiles.channels.FILE_CHANNEL.forEach((element) => {\n        let imgVal = pubnub.getFileUrl({\n          channel: \"FILE_CHANNEL\",\n          id: element.message.file.id,\n          name: element.message.file.name,\n        });\n\n        let messageVal = element.message.message;\n\n        urlsArr.push({ imgVal, messageVal, timetoken: element.timetoken });\n      });\n    }\n\n    await dispatch({\n      type: GET_IMAGE_FILES,\n      item: urlsArr,\n    });\n  };\n\n  const addRating = (obj) => {\n    dispatch({\n      type: ADD_RECIPE_RATING,\n      item: obj,\n    });\n  };\n\n  const getRatings = () => {\n    pubnub\n      .getMessageActions({\n        channel: RECCOMENDATIONS_CHANNEL,\n      })\n      .then(async (res) => {\n        dispatch({\n          type: GET_RECIPE_RATINGS,\n          item: res.data,\n        });\n      });\n  };\n\n  const filterRecommendedRecipes = (text) => {\n    dispatch({ type: FILTER_RECOMMENDED_RECIPES, payload: text });\n  };\n\n  const clearFilteredRecommendedRecipes = () => {\n    dispatch({ type: CLEAR_FILTERED_RECOMMENDED_RECIPES });\n  };\n\n  return (\n    <MessagesContext.Provider\n      value={{\n        pubsub: state.pubsub,\n        recipeRatings: state.recipeRatings,\n        postReplies: state.postReplies,\n        reccommended_recipes: state.reccommended_recipes,\n        filtered_recommended_recipes: state.filtered_recommended_recipes,\n        filterRecommendedRecipes,\n        allPosts: state.allPosts,\n        clearFilteredRecommendedRecipes,\n        filterRecommendedRecipes,\n        error: state.error,\n        imageFilesList: state.imageFilesList,\n        loading: state.loading,\n        addRecipeRecommendation,\n        getReccomendedRecipes,\n        addRating,\n        getRatings,\n        getImageFiles,\n        newImageFile,\n        addPost,\n        getAllPosts,\n        getPostReplies,\n        addPostReply,\n      }}\n    >\n      {props.children}\n    </MessagesContext.Provider>\n  );\n};\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/messages/MessagesContext.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/context/messages/MessagesReducer.js",["229"],"import {\n  ADD_RECCOMENDED_RECIPE,\n  ADD_RECIPE_RATING,\n  GET_RECCOMENDED_RECIPES,\n  GET_RECIPE_RATINGS,\n  NEW_IMAGE_FILE,\n  GET_IMAGE_FILES,\n  FILTER_RECOMMENDED_RECIPES,\n  CLEAR_FILTERED_RECOMMENDED_RECIPES,\n  GET_ALL_POSTS,\n  ADD_POST_REPLIES,\n  GET_POST_REPLIES,\n  ADD_POST,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case ADD_RECCOMENDED_RECIPE:\n      return {\n        ...state,\n        reccommended_recipes: [...state.reccommended_recipes, action.item],\n      };\n\n    case ADD_POST:\n      return {\n        ...state,\n        allPosts: [...state.allPosts, action.item],\n      };\n\n    case GET_ALL_POSTS:\n      return {\n        ...state,\n        allPosts: action.item,\n        loading: false,\n      };\n    case ADD_RECIPE_RATING:\n      return {\n        ...state,\n        recipeRatings: [...state.recipeRatings, action.item],\n      };\n\n    case ADD_POST_REPLIES:\n      return {\n        ...state,\n        postReplies: [...state.postReplies, action.item],\n      };\n\n    case GET_POST_REPLIES:\n      return {\n        ...state,\n        postReplies: action.item,\n        loading: false,\n      };\n    case GET_IMAGE_FILES:\n      return {\n        ...state,\n        imageFilesList: action.item,\n      };\n\n    case FILTER_RECOMMENDED_RECIPES:\n      return {\n        ...state,\n        filtered_recommended_recipes: state.reccommended_recipes.filter(\n          (recipe) => {\n            const regex = new RegExp(`${action.payload}`, \"gi\");\n            return recipe.message.recipe.label.match(regex);\n          }\n        ),\n      };\n    case CLEAR_FILTERED_RECOMMENDED_RECIPES:\n      return {\n        ...state,\n        filtered_recommended_recipes: null,\n      };\n\n    case NEW_IMAGE_FILE:\n      return {\n        ...state,\n        imageFilesList: [...state.imageFilesList, action.item],\n      };\n\n    case GET_RECCOMENDED_RECIPES:\n      return {\n        ...state,\n        reccommended_recipes: action.item,\n        loading: false,\n      };\n\n    case GET_RECIPE_RATINGS:\n      return {\n        ...state,\n        recipeRatings: action.item,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/utils/useInitializeListeners.js",["230","231"],"import { useEffect, useContext } from \"react\";\nimport MessagesContext from \"../context/messages/MessagesContext\";\n\nconst useInitializeListeners = () => {\n  const messagesContext = useContext(MessagesContext);\n  const {\n    addRecipeRecommendation,\n    pubsub,\n    newImageFile,\n    addPost,\n    addPostReply,\n  } = messagesContext;\n\n  useEffect(() => {\n    pubsub.addListener({\n      message: (messageObject) => {\n        const { channel, message, timetoken } = messageObject;\n        const obj = {\n          channel,\n          message,\n          timetoken,\n        };\n        console.log(\"Received message\", messageObject, \"channel\", channel);\n        if (channel === \"RECCOMENDATIONS_CHANNEL\") {\n          addRecipeRecommendation(obj);\n        } else if (channel === \"ALL_USERS1\") {\n          addPost(obj);\n        }\n      },\n      messageAction: (messageObject) => {\n        const {\n          actionTimetoken,\n          messageTimetoken,\n          value,\n          channel,\n        } = messageObject.data;\n        const val = { actionTimetoken, messageTimetoken, value };\n        addPostReply(val);\n      },\n\n      file: (messageObject) => {\n        let messageAndFile = {};\n        messageAndFile.message = messageObject.message;\n        messageAndFile.file = messageObject.file;\n        messageAndFile.channel = messageObject.channel;\n        messageAndFile.timetoken = messageObject.timetoken;\n\n        newImageFile(messageAndFile);\n        console.log(messageAndFile);\n      },\n    });\n  }, []);\n};\n\nexport default useInitializeListeners;\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/RecommendedRecipes.js",["232"],"import React, { useContext, useEffect } from \"react\";\nimport useInitializeListeners from \"../../utils/useInitializeListeners\";\nimport MessagesContext from \"../../context/messages/MessagesContext\";\nimport Spinner from \"../../components/layout/Spinner\";\nimport RecommendedRecipesItem from \"./RecommendedRecipesItem\";\nimport FilterRecommended from \"./FilterRecommended\";\n\nconst RecommendedRecipes = () => {\n  /////// initialize pub/sub listeners\n  useInitializeListeners();\n\n  const messagesContext = useContext(MessagesContext);\n  const {\n    getReccomendedRecipes,\n    reccommended_recipes,\n    filtered_recommended_recipes,\n    getRatings,\n    recipeRatings,\n    loading,\n  } = messagesContext;\n\n  useEffect(() => {\n    getReccomendedRecipes();\n    getRatings();\n  }, []);\n\n  //// make sure no duplicates\n  let ratings = [...new Set(recipeRatings)];\n\n  return (\n    <>\n      <div class='container' id='container'>\n        <FilterRecommended />{\" \"}\n        <div id=''>\n          <div id='recommended-recipes'>\n            {\" \"}\n            {reccommended_recipes !== null &&\n            reccommended_recipes.length > 0 &&\n            !loading ? (\n              filtered_recommended_recipes !== null ? (\n                filtered_recommended_recipes.map((recipe) => (\n                  <div id='recommend-item'>\n                    <RecommendedRecipesItem\n                      recipe={recipe.message}\n                      timetoken={recipe.timetoken}\n                      ratings={ratings}\n                    />\n                  </div>\n                ))\n              ) : (\n                reccommended_recipes.map((recipe) => (\n                  <div id='recommend-item'>\n                    <RecommendedRecipesItem\n                      recipe={recipe.message}\n                      timetoken={recipe.timetoken}\n                      ratings={ratings}\n                    />\n                  </div>\n                ))\n              )\n            ) : (\n              <Spinner />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default RecommendedRecipes;\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/RecommendedRecipesItem.js",["233","234","235"],"import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport MessagesContext from \"../../context/messages/MessagesContext\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useEffect } from \"react\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: \"#ff6d75\",\n  },\n  iconHover: {\n    color: \"#ff3d47\",\n  },\n})(Rating);\n\nexport default function RecommendedRecipesItem({ recipe, timetoken }) {\n  const messagesContext = useContext(MessagesContext);\n  const { getImageFiles, imageFilesList, recipeRatings } = messagesContext;\n\n  useEffect(() => {\n    getImageFiles();\n  }, []);\n\n  const classes = useStyles();\n\n  /////get the images that have been uploaded for this recipe\n  let imagesForRecipe =\n    imageFilesList && imageFilesList.length > 0\n      ? imageFilesList\n          .filter((item) => {\n            return item.messageVal;\n          })\n          .filter((item) => {\n            return item.messageVal.value === timetoken;\n          })\n      : [];\n\n  const ratingsArr = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n\n  /// get ratings for this recipe\n  let recipeRatingsStars =\n    recipeRatings && recipeRatings.length > 0\n      ? recipeRatings.filter((item) => {\n          return item.messageTimetoken === timetoken;\n        })\n      : [];\n  /// get ratings for this recipe /// keep one variable that is not being transformed\n  let allRatingsForRecipe =\n    recipeRatings && recipeRatings.length > 0\n      ? recipeRatings.filter((item) => {\n          return item.messageTimetoken === timetoken;\n        })\n      : [];\n\n  ///// make sure that number is in our rating options (not over 5 or less than 0)\n  recipeRatingsStars = recipeRatingsStars.filter((rating) => {\n    if (ratingsArr.includes(rating.value)) {\n      return rating;\n    }\n  });\n\n  let starCounts = recipeRatingsStars.length;\n  recipeRatingsStars = recipeRatingsStars\n    .map((rating) => {\n      return parseInt(rating.value);\n    })\n    .reduce((a, b) => a + b, 0);\n  recipeRatingsStars = recipeRatingsStars / starCounts;\n\n  let recipeRatingsMessages =\n    recipeRatings && recipeRatings.length > 0\n      ? recipeRatings.filter((item) => {\n          return item.messageTimetoken === timetoken;\n        })\n      : [];\n\n  recipeRatingsMessages = recipeRatingsMessages.filter((rating) => {\n    if (!ratingsArr.includes(rating.value) && rating.value.charAt(0) === \"$\") {\n      return rating;\n    }\n  });\n\n  let messageCounts = recipeRatingsMessages ? recipeRatingsMessages.length : 0;\n  recipeRatingsMessages = recipeRatingsMessages.map((rating) => {\n    return rating.value;\n  });\n\n  return (\n    <Card className={classes.root} id='focus-transparent'>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={recipe.recipe.image}\n          title={recipe.recipe.label}\n        />\n        <CardContent>\n          <Typography gutterBottom variant='h6' component='h3'>\n            {recipe.recipe.label}\n          </Typography>\n          <Typography gutterBottom variant='p' component='p'>\n            Shared by {recipe.name}\n          </Typography>\n          <div className='rating-text'>\n            <StyledRating\n              name='customized-color'\n              value={recipeRatingsStars}\n              defaultValue={0}\n              readOnly\n              getLabelText={(value) =>\n                `${value} Heart${value !== 1 ? \"s\" : \"\"}`\n              }\n              precision={0.1}\n              icon={<FavoriteIcon fontSize='inherit' />}\n            />\n\n            <Typography>\n              {starCounts === 0\n                ? \"\"\n                : starCounts === 1\n                ? `${starCounts} Rating`\n                : `${starCounts} Ratings`}\n            </Typography>\n          </div>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size='small' color='primary'>\n          <Link\n            to={{\n              pathname: \"/view\",\n              data: {\n                recipe,\n                timetoken,\n                messageCounts,\n                recipeRatingsMessages,\n                recipeRatingsStars,\n                starCounts,\n                allRatings: allRatingsForRecipe,\n                allImages: imagesForRecipe,\n              },\n            }}\n          >\n            {\" \"}\n            View Recipe\n          </Link>\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/ViewRecipe.js",["236","237"],"import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RecipesContext from \"../../context/recipes/RecipesContext\";\nimport M from \"materialize-css/dist/js/materialize.min\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport NutritionModal from \"../recipes/Modals/NutritionModal\";\nimport Button from \"@material-ui/core/Button\";\nimport ImagesViewModal from \"../recipes/Modals/ImagesViewModal\";\n\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: \"#ff6d75\",\n  },\n  iconHover: {\n    color: \"#ff3d47\",\n  },\n})(Rating);\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    marginTop: `${63}px`,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst ViewRecipe = (props) => {\n  const classes = useStyles();\n  const recipesContext = useContext(RecipesContext);\n  const { saveRecipe } = recipesContext;\n  const [openNutritionModal, setOpenNutritionModal] = React.useState(false);\n  const [openImagesModal, setOpenImagesModal] = React.useState(false);\n\n  ////// handle modal open/close state\n  const handleClickImagesModalOpen = () => {\n    setOpenImagesModal(true);\n  };\n\n  const handleCloseImagesModal = () => {\n    setOpenImagesModal(false);\n  };\n\n  const handleClickNutritionModalOpen = () => {\n    setOpenNutritionModal(true);\n  };\n\n  const handleCloseNutritionModal = () => {\n    setOpenNutritionModal(false);\n  };\n\n  ////////// known issue; page will error out on refresh because props values are lost on refresh. Issue still open\n  const { data } = props.location;\n\n  const saveRecipeItem = () => {\n    let type = \"recommended\";\n    saveRecipe({ recipe: data.recipe.recipe, type, timetoken: data.timetoken });\n    M.toast({ html: \"Saved\" });\n  };\n  const { recipeRatingsStars, starCounts } = data;\n\n  return (\n    <>\n      <NutritionModal\n        allNutrients={data.recipe.recipe.allNutrients}\n        open={openNutritionModal}\n        handleClose={handleCloseNutritionModal}\n        healthLabels={data.recipe.recipe.diet_labels}\n      />\n\n      <ImagesViewModal\n        open={openImagesModal}\n        handleClose={handleCloseImagesModal}\n        allImages={data.allImages}\n      />\n      <div className='card container' id='container'>\n        <div className={classes.root}>\n          <CssBaseline />\n\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <div class='favourites'>\n              <div class='col s12 m12'>\n                <div class='title-label'>\n                  <div className='title-bar'>\n                    <h4>{data.recipe.recipe.label}</h4>\n                    <button\n                      className='btn-flat'\n                      onClick={() => {\n                        saveRecipeItem();\n                      }}\n                    >\n                      Save Recipe\n                    </button>\n                  </div>\n                  <div className='nutrition-chips'>\n                    {\" \"}\n                    {data.recipe.recipe.diet_labels.map((label) => {\n                      return <Chip label={label} color='primary' />;\n                    })}\n                  </div>\n                  <div className='rating-text'>\n                    {starCounts > 0 && (\n                      <StyledRating\n                        name='customized-color'\n                        value={recipeRatingsStars}\n                        defaultValue={0}\n                        readOnly\n                        getLabelText={(value) =>\n                          `${value} Heart${value !== 1 ? \"s\" : \"\"}`\n                        }\n                        precision={0.1}\n                        icon={<FavoriteIcon fontSize='inherit' />}\n                      />\n                    )}\n\n                    <Typography>\n                      {starCounts === 0\n                        ? \"\"\n                        : starCounts === 1\n                        ? `${starCounts} Rating`\n                        : `${starCounts} Ratings`}\n                    </Typography>\n                  </div>\n\n                  <div class='review'>\n                    <Button\n                      variant='outlined'\n                      color='primary'\n                      id='focus-transparent'\n                      onClick={handleClickImagesModalOpen}\n                    >\n                      View Submitted Images\n                    </Button>\n                  </div>\n\n                  <img\n                    class=' s12 m12 inner-img'\n                    id='activator'\n                    src={data.recipe.recipe.image}\n                  />\n                </div>\n                <Button\n                  variant='outlined'\n                  color='primary'\n                  id='focus-Transparent'\n                  onClick={handleClickNutritionModalOpen}\n                >\n                  View Nutrition\n                </Button>\n                <div class=''>\n                  <ul class='collection with-header'>\n                    <li class='collection-header'>\n                      <h5>Ingredients</h5>\n                    </li>\n\n                    {data.recipe.recipe.ingredientLines.map((one, index) => {\n                      return <li class='collection-item'>{one}</li>;\n                    })}\n                  </ul>\n                  {Array.isArray(data.recipe.recipe.source) ? (\n                    <ul className='collection'>\n                      <li class='collection-header'>\n                        <h5>Instructions</h5>\n                      </li>{\" \"}\n                      {data.recipe.recipe.source.map((item, index) => {\n                        return (\n                          <li class='collection-item'>{`${\n                            index + 1\n                          } -${item}`}</li>\n                        );\n                      })}\n                    </ul>\n                  ) : (\n                    <a href='#'>\n                      Cooking Instructions from {data.recipe.recipe.source}\n                    </a>\n                  )}\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewRecipe;\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/SavedRecipiesIndex.js",["238","239","240","241","242","243","244","245"],"import React, { useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport RecipesContext from \"../../context/recipes/RecipesContext\";\nimport Spinner from \"../layout/Spinner\";\nimport NutritionTable from \"./NutritionTable\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CollectionButton from \"./CollectionButton\";\nimport RatingModal from \"../recipes/Modals/RatingModal\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport NutritionModal from \"../recipes/Modals/NutritionModal\";\nimport UploadModal from \"../recipes/Modals/UploadModal\";\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    marginTop: `${63}px`,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function SavedRecipesIndex(props) {\n  const classes = useStyles();\n  const [openNutritionModal, setOpenNutritionModal] = React.useState(false);\n  const [openRatingsModal, setOpenRatingsModal] = React.useState(false);\n  const [openUploadModal, setOpenUploadModal] = React.useState(false);\n\n  //// handle modals\n  const handleClickUploadModalOpen = () => {\n    setOpenUploadModal(true);\n  };\n\n  const handleCloseUploadModal = () => {\n    setOpenUploadModal(false);\n  };\n\n  const handleClickNutritionModalOpen = () => {\n    setOpenNutritionModal(true);\n  };\n\n  const handleCloseNutritionModal = () => {\n    setOpenNutritionModal(false);\n  };\n\n  const handleClickRatingsModalOpen = () => {\n    setOpenRatingsModal(true);\n  };\n\n  const handleCloseRatingsModal = () => {\n    setOpenRatingsModal(false);\n  };\n\n  const recipesContext = useContext(RecipesContext);\n  const { saved_recipes, loading, getSavedRecipes } = recipesContext;\n\n  useEffect(async () => {\n    await getSavedRecipes();\n  }, []);\n\n  const searchedRecipes = saved_recipes\n    ? saved_recipes.filter((recipe) => {\n        return recipe.type === \"personal\";\n      })\n    : null;\n\n  const recommendedRecipes = saved_recipes\n    ? saved_recipes.filter((recipe) => {\n        return recipe.type === \"recommended\";\n      })\n    : null;\n\n  return saved_recipes !== null && !loading ? (\n    saved_recipes.length > 0 ? (\n      <>\n        <RatingModal\n          open={openRatingsModal}\n          handleClose={handleCloseRatingsModal}\n          timetoken={saved_recipes[props.match.params.index].timetoken}\n          id={saved_recipes[props.match.params.index]._id}\n        />\n        <NutritionModal\n          allNutrients={\n            saved_recipes[props.match.params.index].recipe.allNutrients\n          }\n          open={openNutritionModal}\n          handleClose={handleCloseNutritionModal}\n          healthLabels={\n            saved_recipes[props.match.params.index].recipe.diet_labels\n          }\n        />\n        <UploadModal\n          open={openUploadModal}\n          handleClose={handleCloseUploadModal}\n          timetoken={saved_recipes[props.match.params.index].timetoken}\n        />\n        <div className={classes.root}>\n          <CssBaseline />\n          <ul id='slide-out' class='sidenav-fixed z-depth-5'>\n            {searchedRecipes.map((recipe, index) => {\n              return (\n                <>\n                  {\" \"}\n                  <Divider id={index} />\n                  <ListItem button key={recipe.recipe.label} id={index}>\n                    <Link\n                      to={{\n                        pathname: \"/showrecipe\",\n                        data: recipe,\n                      }}\n                    >\n                      {\" \"}\n                      <ListItemText primary={recipe.recipe.label} id={index} />\n                    </Link>\n                  </ListItem>\n                </>\n              );\n            })}\n\n            {recommendedRecipes.map((recipe, index) => {\n              return (\n                <>\n                  {\" \"}\n                  <Divider id={index} />\n                  <ListItem button key={recipe.recipe.label} id={index}>\n                    <Link\n                      to={{\n                        pathname: \"/showrecipe\",\n                        data: recipe,\n                      }}\n                    >\n                      {\" \"}\n                      <ListItemText primary={recipe.recipe.label} id={index} />\n                    </Link>\n                  </ListItem>\n                </>\n              );\n            })}\n          </ul>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <div class='favourites'>\n              <div class='col s12 m12'>\n                <div class='title-label'>\n                  <div className='title-bar'>\n                    <h4>\n                      {saved_recipes[props.match.params.index].recipe.label}\n                    </h4>\n                    {saved_recipes[props.match.params.index].recipe.type ===\n                    \"personal\" ? (\n                      <CollectionButton\n                        recipe={\n                          saved_recipes[props.match.params.index].recipe.recipe\n                        }\n                      />\n                    ) : !saved_recipes[props.match.params.index].recipe\n                        .isRated ? (\n                      <div className='buttons-mix'>\n                        <Button\n                          variant='outlined'\n                          color='primary'\n                          id='focus-Transparent'\n                          onClick={handleClickRatingsModalOpen}\n                        >\n                          Rate Recipe\n                        </Button>\n                        <Button\n                          variant='outlined'\n                          color='primary'\n                          onClick={handleClickUploadModalOpen}\n                        >\n                          Upload Recipe Creation\n                        </Button>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                  <div className='nutrition-chips'>\n                    {\" \"}\n                    {saved_recipes[\n                      props.match.params.index\n                    ].recipe.diet_labels.map((label) => {\n                      return <Chip label={label} color='primary' />;\n                    })}\n                  </div>\n                  <img\n                    class=' s12 m12 inner-img'\n                    id='activator'\n                    src={saved_recipes[props.match.params.index].recipe.image}\n                  />\n                </div>\n                <Button\n                  variant='outlined'\n                  color='primary'\n                  id='focus-Transparent'\n                  onClick={handleClickNutritionModalOpen}\n                >\n                  View Nutrition\n                </Button>\n                <div class=''>\n                  <ul class='collection with-header'>\n                    <li class='collection-header'>\n                      <h5>Ingredients</h5>\n                    </li>\n\n                    {saved_recipes[\n                      props.match.params.index\n                    ].recipe.ingredientLines.map((one, index) => {\n                      return <li class='collection-item'>{one}</li>;\n                    })}\n                  </ul>\n                  {Array.isArray(\n                    saved_recipes[props.match.params.index].recipe.source\n                  ) ? (\n                    <ul className='collection'>\n                      <li class='collection-header'>\n                        <h5>Instructions</h5>\n                      </li>{\" \"}\n                      {saved_recipes[\n                        props.match.params.index\n                      ].recipe.source.map((item, index) => {\n                        return (\n                          <li class='collection-item'>{`${\n                            index + 1\n                          } -${item}`}</li>\n                        );\n                      })}\n                    </ul>\n                  ) : (\n                    <a href='#'>Cooking Instructions </a>\n                  )}\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    ) : (\n      <div class='container container-inner'>\n        <div class='card'>\n          <h4>\n            No recipes saved yet, search for recipes on the{\" \"}\n            <a href='/recipies'>search recipes page</a>{\" \"}\n          </h4>\n        </div>\n      </div>\n    )\n  ) : (\n    <Spinner />\n  );\n}\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/SavedRecipesView.js",["246","247","248","249"],"import React, { useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport RecipesContext from \"../../context/recipes/RecipesContext\";\nimport Spinner from \"../layout/Spinner\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CollectionButton from \"./CollectionButton\";\nimport RatingModal from \"../recipes/Modals/RatingModal\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport NutritionModal from \"../recipes/Modals/NutritionModal\";\nimport UploadModal from \"../recipes/Modals/UploadModal\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst SavedRecipesView = (props) => {\n  const { data } = props.location;\n\n  ////////knowne issue : the page loses the props on refresh. Issue is yet to be resolved ///////\n  const [openNutritionModal, setOpenNutritionModal] = React.useState(false);\n  const [openRatingsModal, setOpenRatingsModal] = React.useState(false);\n  const [openUploadModal, setOpenUploadModal] = React.useState(false);\n\n  ///// control modals open/close property\n  const handleClickUploadModalOpen = () => {\n    setOpenUploadModal(true);\n  };\n\n  const handleCloseUploadModal = () => {\n    setOpenUploadModal(false);\n  };\n\n  const handleClickNutritionModalOpen = () => {\n    setOpenNutritionModal(true);\n  };\n\n  const handleCloseNutritionModal = () => {\n    setOpenNutritionModal(false);\n  };\n\n  const handleClickRatingsModalOpen = () => {\n    setOpenRatingsModal(true);\n  };\n\n  const handleCloseRatingsModal = () => {\n    setOpenRatingsModal(false);\n  };\n\n  const recipesContext = useContext(RecipesContext);\n  const { saved_recipes, loading, getSavedRecipes } = recipesContext;\n\n  useEffect(async () => {\n    await getSavedRecipes();\n  }, []);\n\n  useEffect(() => {\n    if (document.querySelector(\".MuiListItemText-primary\")) {\n      document\n        .querySelectorAll(\".MuiListItemText-primary\")\n        .forEach((element, index) => {\n          element.id = index;\n        });\n    }\n  }, []);\n\n  const classes = useStyles();\n\n  const searchedRecipes = saved_recipes\n    ? saved_recipes.filter((recipe) => {\n        return recipe.type === \"personal\";\n      })\n    : null;\n\n  const recommendedRecipes = saved_recipes\n    ? saved_recipes.filter((recipe) => {\n        return recipe.type === \"recommended\";\n      })\n    : null;\n\n  return saved_recipes !== null && data !== undefined && !loading ? (\n    saved_recipes.length > 0 ? (\n      <>\n        <RatingModal\n          open={openRatingsModal}\n          handleClose={handleCloseRatingsModal}\n          timetoken={data.timetoken}\n          id={data._id}\n        />\n\n        <NutritionModal\n          allNutrients={data.recipe.allNutrients}\n          open={openNutritionModal}\n          handleClose={handleCloseNutritionModal}\n          healthLabels={data.recipe.diet_labels}\n        />\n        <UploadModal\n          open={openUploadModal}\n          handleClose={handleCloseUploadModal}\n          timetoken={data.timetoken}\n        />\n        <div className={classes.root}>\n          <CssBaseline />\n          <ul id='slide-out' class='sidenav-fixed z-depth-5'>\n            {searchedRecipes.map((recipe, index) => {\n              return (\n                <>\n                  {\" \"}\n                  <Divider id={index} />\n                  <ListItem button key={recipe.recipe.label} id={index}>\n                    <Link\n                      to={{\n                        pathname: \"/showrecipe\",\n                        data: recipe,\n                      }}\n                    >\n                      {\" \"}\n                      <ListItemText primary={recipe.recipe.label} id={index} />\n                    </Link>\n                  </ListItem>\n                </>\n              );\n            })}\n\n            {recommendedRecipes.map((recipe, index) => {\n              return (\n                <>\n                  {\" \"}\n                  <Divider id={index} />\n                  <ListItem button key={recipe.recipe.label} id={index}>\n                    <Link\n                      to={{\n                        pathname: \"/showrecipe\",\n                        data: recipe,\n                      }}\n                    >\n                      {\" \"}\n                      <ListItemText primary={recipe.recipe.label} id={index} />\n                    </Link>\n                  </ListItem>\n                </>\n              );\n            })}\n          </ul>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <div class='favourites'>\n              <div class='col s12 m12'>\n                <div class='title-label'>\n                  <div className='title-bar'>\n                    <h4>{data.recipe.label}</h4>\n                    <div>\n                      {data.type === \"personal\" ? (\n                        <CollectionButton recipe={data.recipe} />\n                      ) : !data.isRated ? (\n                        <div className='buttons-mix'>\n                          <Button\n                            variant='outlined'\n                            color='primary'\n                            id='focus-Transparent'\n                            onClick={handleClickRatingsModalOpen}\n                          >\n                            Rate Recipe\n                          </Button>\n                          <Button\n                            variant='outlined'\n                            color='primary'\n                            onClick={handleClickUploadModalOpen}\n                          >\n                            Upload Recipe Creation\n                          </Button>\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  </div>\n                  <div className='nutrition-chips'>\n                    {\" \"}\n                    {data.recipe.diet_labels.map((label) => {\n                      return <Chip label={label} color='primary' />;\n                    })}\n                  </div>\n                  <img\n                    class=' s12 m12 inner-img'\n                    id='activator'\n                    src={data.recipe.image}\n                  />\n                </div>\n                <Button\n                  variant='outlined'\n                  color='primary'\n                  id='focus-Transparent'\n                  onClick={handleClickNutritionModalOpen}\n                >\n                  View Nutrition\n                </Button>\n                <div class=''>\n                  <ul class='collection with-header'>\n                    <li class='collection-header'>\n                      <h5>Ingredients</h5>\n                    </li>\n\n                    {data.recipe.ingredientLines.map((one, index) => {\n                      return <li class='collection-item'>{one}</li>;\n                    })}\n                  </ul>\n\n                  {Array.isArray(data.recipe.source) ? (\n                    <ul className='collection'>\n                      <li class='collection-header'>\n                        <h5>Instructions</h5>\n                      </li>{\" \"}\n                      {data.recipe.source.map((item, index) => {\n                        return (\n                          <li class='collection-item'>{`${\n                            index + 1\n                          } -${item}`}</li>\n                        );\n                      })}\n                    </ul>\n                  ) : (\n                    <a href='#'>\n                      Cooking Instructions from {data.recipe.source}\n                    </a>\n                  )}\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n      </>\n    ) : (\n      <div class='container container-inner'>\n        <div class='card'>\n          <h4>\n            No recipes saved yet, search for recipes on the{\" \"}\n            <a href='/recipies'>search recipes page</a>{\" \"}\n          </h4>\n        </div>\n      </div>\n    )\n  ) : (\n    <Spinner />\n  );\n};\n\nexport default SavedRecipesView;\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/messages/AllMessages.js",["250","251","252"],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/messages/AllMessagesItem.js",["253","254"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport { Link } from \"react-router-dom\";\nimport MessagesContext from \"../../context/messages/MessagesContext\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 745,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function AllMesssagesItem({ post }) {\n  TimeAgo.locale(en);\n  const classes = useStyles();\n\n  const messagesContext = useContext(MessagesContext);\n  const { getPostReplies, postReplies } = messagesContext;\n\n  useEffect(() => {\n    getPostReplies();\n  }, []);\n\n  let messagePostReplies =\n    postReplies && postReplies.length > 0\n      ? postReplies.filter((item) => {\n          return item.messageTimetoken === post.timetoken;\n        })\n      : [];\n\n  const timeAgo = new TimeAgo();\n\n  return (\n    <Card className={classes.root} id='message-item'>\n      <CardActionArea id='focus-transparent'>\n        <CardContent>\n          <Typography variant='subtitle2' color='textSecondary' component='p'>\n            <i class='material-icons'>person_outline</i> {post.message.name}{\" \"}\n            :::::::::::::\n            {timeAgo.format(new Date(post.message.date))}\n          </Typography>\n          <Typography gutterBottom variant='h5' component='h2'>\n            {post.message.postMessage}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n\n      <Button size='small' color='textsecondary'>\n        <i class='material-icons'>comment</i>\n        {` ${messagePostReplies.length}`}\n      </Button>\n      <Button size='small' color='primary'>\n        <Link\n          to={{\n            pathname: \"/post\",\n            data: {\n              post,\n              timeAgo,\n            },\n          }}\n        >\n          {\" \"}\n          View Post\n        </Link>\n      </Button>\n    </Card>\n  );\n}\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/RecipeReviews.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/RecipeReviewItem.js",["255","256","257","258"],"import React from \"react\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst RecipeReviewItem = ({ review }) => {\n  console.log(review);\n  const StyledRating = withStyles({\n    iconFilled: {\n      color: \"#ff6d75\",\n    },\n    iconHover: {\n      color: \"#ff3d47\",\n    },\n  })(Rating);\n  let transformedResult = {};\n  const rating_values = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n\n  let data = review.reduce((r, e) => {\n    // get first letter of name of current element\n    let group = e.value[0];\n    // if there is no property in accumulator with this letter create it\n    if (!r[group]) r[group] = { group, children: [e] };\n    // if there is push current element to children array for that letter\n    else r[group].children.push(e);\n    // return accumulator\n    return r;\n  }, {});\n\n  // since data at this point is an object, to get array of values\n  // we use Object.values method\n  let result = Object.values(data);\n\n  console.log(result);\n\n  //const groupedReview = groupByKey(review, \"value\");\n  //console.log(groupedReview);\n  review.forEach((review) => {\n    if (review.value.charAt(0) === \"@\") {\n      let username = review.value.slice(1);\n      transformedResult.username = username;\n    } else if (review.value.charAt(0) === \"%\") {\n      let date = review.value.slice(1);\n\n      transformedResult.date = date;\n    } else if (review.value.charAt(0) === \"$\") {\n      let message = review.value.slice(1);\n      transformedResult.message = message;\n    } else if (rating_values.includes(review.value.charAt(0))) {\n      let rating = parseInt(review.value);\n      transformedResult.rating = rating;\n    }\n  });\n\n  console.log(transformedResult);\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n      \"& > *\": {\n        margin: theme.spacing(1),\n      },\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className='review-outer'></div>\n\n      <div className='rating-text'></div>\n\n      <div>{review.message}</div>\n    </>\n  );\n};\n\nexport default RecipeReviewItem;\n",["259","260"],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/CreateRecipe.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/ImageTileList.js",["261","262"],"import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport M from \"materialize-css/dist/js/materialize.min\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 800,\n    height: 450,\n  },\n}));\n\nexport default function ImageTileList({ tileData }) {\n  const classes = useStyles();\n  useEffect(() => {\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      var elems = document.querySelectorAll(\".materialboxed\");\n      var instances = M.Materialbox.init(elems);\n    });\n  }, []);\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={160} className={classes.gridList} cols={3}>\n        {tileData.map((tile) => (\n          <GridListTile key={tile.img} cols={tile.cols || 3}>\n            <img class='materialboxed' src={`${tile.img}`} />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/FilterRecommended.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/messages/AddPostModal.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/messages/ViewPost.js",["263"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MessagesContext from \"../../context/messages/MessagesContext\";\nimport AuthContext from \"../../context/auth/AuthContext\";\n\nconst ViewPost = (props) => {\n  const { data } = props.location;\n  const [postReply, setPostReply] = useState(\"\");\n  const authContext = useContext(AuthContext);\n  const { user } = authContext;\n\n  const messagesContext = useContext(MessagesContext);\n  const {\n    pubsub: { addMessageAction },\n    getPostReplies,\n    postReplies,\n  } = messagesContext;\n\n  const onChangePostReply = (e) => {\n    setPostReply(e.target.value);\n  };\n\n  useEffect(() => {\n    getPostReplies();\n  }, []);\n\n  let messagePostReplies =\n    postReplies && postReplies.length > 0\n      ? postReplies.filter((item) => {\n          return item.messageTimetoken === data.post.timetoken;\n        })\n      : [];\n\n  const publishReply = () => {\n    let channel = \"ALL_USERS1\";\n    let username = user.username;\n    let reply = `${username},${postReply}`;\n    addMessageAction(channel, data.post.timetoken, reply);\n    setPostReply(\"\");\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      backgroundColor: \"blue\",\n      padding: theme.spacing(3),\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className='card container' id='container'>\n      <div id='post-div'>\n        <Card className={classes.root} id='message-item'>\n          <CardActionArea id='focus-transparent'>\n            <CardContent>\n              <Typography\n                variant='subtitle2'\n                color='textSecondary'\n                component='p'\n              >\n                <i class='material-icons'>person_outline</i>{\" \"}\n                {data.post.message.name}\n              </Typography>\n              <Typography variant='h4' color='primary' component='p'>\n                {data.post.message.postMessage}\n              </Typography>\n              <Button size='small' color='textsecondary'>\n                <i class='material-icons'>comment</i>\n                {` ${messagePostReplies.length}`}\n              </Button>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </div>\n      <div id='space'></div>\n      <div id='replies-card'>\n        <Card className={classes.root} id='message-item'>\n          <CardActionArea id='focus-transparent'>\n            <CardContent>\n              <div className='input-field search-box'>\n                <input\n                  className='autocomplete '\n                  id='round'\n                  type='text'\n                  value={postReply}\n                  onChange={(e) => {\n                    onChangePostReply(e);\n                  }}\n                  required\n                />\n\n                <button\n                  type='submit'\n                  className='btn small waves-effect waves-light'\n                  id='reply-post'\n                  onClick={() => {\n                    publishReply();\n                  }}\n                >\n                  Reply\n                </button>\n              </div>\n              <Typography\n                variant='h6'\n                color='textSecondary'\n                component='h4'\n              ></Typography>\n              {messagePostReplies &&\n                messagePostReplies.map((reply) => {\n                  let text = reply.value.split(\",\")[1];\n                  return (\n                    <div>\n                      <Typography\n                        variant='subtitle2'\n                        color='textSecondary'\n                        component='p'\n                        id='replies-header'\n                      >\n                        {`${reply.value.split(\",\")[0]}`}\n                      </Typography>\n                      <Typography gutterBottom variant='h6' component='h2'>\n                        {\" \"}\n                        {text}\n                      </Typography>\n                    </div>\n                  );\n                })}\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default ViewPost;\n","/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/Routing/PrivateRoute.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/Modals/RatingModal.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/Modals/UploadModal.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/Modals/NutritionModal.js",[],"/Users/lovenosa-omorogiuwa/sei/projects/project4/project4/src/components/recipes/Modals/ImagesViewModal.js",[],{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"264","replacedBy":"268"},{"ruleId":"266","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":27,"column":6,"nodeType":"272","endLine":27,"endColumn":45,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":44,"column":9,"nodeType":"276","endLine":44,"endColumn":31},{"ruleId":"274","severity":1,"message":"277","line":66,"column":11,"nodeType":"276","endLine":66,"endColumn":59},{"ruleId":"270","severity":1,"message":"271","line":20,"column":6,"nodeType":"272","endLine":20,"endColumn":45,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":1,"column":29,"nodeType":"281","messageId":"282","endLine":1,"endColumn":39},{"ruleId":"283","severity":1,"message":"284","line":3,"column":1,"nodeType":"285","endLine":14,"endColumn":3},{"ruleId":"283","severity":1,"message":"284","line":12,"column":1,"nodeType":"285","endLine":60,"endColumn":3},{"ruleId":"286","severity":1,"message":"287","line":13,"column":3,"nodeType":"288","messageId":"289","endLine":59,"endColumn":4},{"ruleId":"279","severity":1,"message":"280","line":1,"column":29,"nodeType":"281","messageId":"282","endLine":1,"endColumn":39},{"ruleId":"279","severity":1,"message":"290","line":73,"column":13,"nodeType":"281","messageId":"282","endLine":73,"endColumn":16},{"ruleId":"283","severity":1,"message":"284","line":9,"column":1,"nodeType":"285","endLine":40,"endColumn":3},{"ruleId":"286","severity":1,"message":"287","line":10,"column":3,"nodeType":"288","messageId":"289","endLine":39,"endColumn":4},{"ruleId":"279","severity":1,"message":"291","line":51,"column":16,"nodeType":"281","messageId":"282","endLine":51,"endColumn":23},{"ruleId":"279","severity":1,"message":"292","line":52,"column":23,"nodeType":"281","messageId":"282","endLine":52,"endColumn":37},{"ruleId":"279","severity":1,"message":"293","line":10,"column":8,"nodeType":"281","messageId":"282","endLine":10,"endColumn":12},{"ruleId":"279","severity":1,"message":"294","line":1,"column":29,"nodeType":"281","messageId":"282","endLine":1,"endColumn":38},{"ruleId":"279","severity":1,"message":"295","line":78,"column":11,"nodeType":"281","messageId":"282","endLine":78,"endColumn":17},{"ruleId":"279","severity":1,"message":"296","line":182,"column":9,"nodeType":"281","messageId":"282","endLine":182,"endColumn":16},{"ruleId":"297","severity":1,"message":"298","line":270,"column":9,"nodeType":"299","messageId":"300","endLine":270,"endColumn":33},{"ruleId":"283","severity":1,"message":"284","line":16,"column":1,"nodeType":"285","endLine":99,"endColumn":3},{"ruleId":"279","severity":1,"message":"301","line":35,"column":11,"nodeType":"281","messageId":"282","endLine":35,"endColumn":18},{"ruleId":"270","severity":1,"message":"302","line":52,"column":6,"nodeType":"272","endLine":52,"endColumn":8,"suggestions":"303"},{"ruleId":"270","severity":1,"message":"304","line":25,"column":6,"nodeType":"272","endLine":25,"endColumn":8,"suggestions":"305"},{"ruleId":"270","severity":1,"message":"306","line":41,"column":6,"nodeType":"272","endLine":41,"endColumn":8,"suggestions":"307"},{"ruleId":"308","severity":1,"message":"309","line":75,"column":59,"nodeType":"310","messageId":"311","endLine":75,"endColumn":61},{"ruleId":"308","severity":1,"message":"309","line":96,"column":65,"nodeType":"310","messageId":"311","endLine":96,"endColumn":67},{"ruleId":"312","severity":1,"message":"313","line":160,"column":19,"nodeType":"276","endLine":164,"endColumn":21},{"ruleId":"274","severity":1,"message":"277","line":198,"column":21,"nodeType":"276","endLine":198,"endColumn":33},{"ruleId":"279","severity":1,"message":"314","line":3,"column":8,"nodeType":"281","messageId":"282","endLine":3,"endColumn":14},{"ruleId":"279","severity":1,"message":"315","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":12},{"ruleId":"279","severity":1,"message":"316","line":6,"column":8,"nodeType":"281","messageId":"282","endLine":6,"endColumn":18},{"ruleId":"279","severity":1,"message":"317","line":12,"column":8,"nodeType":"281","messageId":"282","endLine":12,"endColumn":22},{"ruleId":"270","severity":1,"message":"318","line":81,"column":13,"nodeType":"310","endLine":83,"endColumn":4},{"ruleId":"270","severity":1,"message":"319","line":83,"column":6,"nodeType":"272","endLine":83,"endColumn":8,"suggestions":"320"},{"ruleId":"312","severity":1,"message":"313","line":211,"column":19,"nodeType":"276","endLine":215,"endColumn":21},{"ruleId":"274","severity":1,"message":"277","line":255,"column":21,"nodeType":"276","endLine":255,"endColumn":33},{"ruleId":"270","severity":1,"message":"318","line":71,"column":13,"nodeType":"310","endLine":73,"endColumn":4},{"ruleId":"270","severity":1,"message":"319","line":73,"column":6,"nodeType":"272","endLine":73,"endColumn":8,"suggestions":"321"},{"ruleId":"312","severity":1,"message":"313","line":202,"column":19,"nodeType":"276","endLine":206,"endColumn":21},{"ruleId":"274","severity":1,"message":"277","line":241,"column":21,"nodeType":"276","endLine":241,"endColumn":33},{"ruleId":"279","severity":1,"message":"322","line":1,"column":29,"nodeType":"281","messageId":"282","endLine":1,"endColumn":37},{"ruleId":"270","severity":1,"message":"323","line":16,"column":6,"nodeType":"272","endLine":16,"endColumn":8,"suggestions":"324"},{"ruleId":"270","severity":1,"message":"325","line":30,"column":6,"nodeType":"272","endLine":30,"endColumn":8,"suggestions":"326"},{"ruleId":"279","severity":1,"message":"322","line":1,"column":29,"nodeType":"281","messageId":"282","endLine":1,"endColumn":37},{"ruleId":"270","severity":1,"message":"323","line":31,"column":6,"nodeType":"272","endLine":31,"endColumn":8,"suggestions":"327"},{"ruleId":"279","severity":1,"message":"328","line":4,"column":8,"nodeType":"281","messageId":"282","endLine":4,"endColumn":20},{"ruleId":"279","severity":1,"message":"329","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":14},{"ruleId":"279","severity":1,"message":"330","line":10,"column":9,"nodeType":"281","messageId":"282","endLine":10,"endColumn":21},{"ruleId":"279","severity":1,"message":"331","line":70,"column":9,"nodeType":"281","messageId":"282","endLine":70,"endColumn":16},{"ruleId":"264","replacedBy":"332"},{"ruleId":"266","replacedBy":"333"},{"ruleId":"279","severity":1,"message":"334","line":26,"column":11,"nodeType":"281","messageId":"282","endLine":26,"endColumn":20},{"ruleId":"312","severity":1,"message":"313","line":34,"column":13,"nodeType":"276","endLine":34,"endColumn":62},{"ruleId":"270","severity":1,"message":"323","line":30,"column":6,"nodeType":"272","endLine":30,"endColumn":8,"suggestions":"335"},"no-native-reassign",["336"],"no-negated-in-lhs",["337"],["336"],["337"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clearErrors' and 'setAlert'. Either include them or remove the dependency array.","ArrayExpression",["338"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["339"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'res' is assigned a value but never used.","'setPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","'Chip' is defined but never used.","'useEffect' is defined but never used.","'result' is assigned a value but never used.","'urlsArr' is assigned a value but never used.","no-dupe-keys","Duplicate key 'filterRecommendedRecipes'.","ObjectExpression","unexpected","'channel' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addPost', 'addPostReply', 'addRecipeRecommendation', 'newImageFile', and 'pubsub'. Either include them or remove the dependency array.",["340"],"React Hook useEffect has missing dependencies: 'getRatings' and 'getReccomendedRecipes'. Either include them or remove the dependency array.",["341"],"React Hook useEffect has a missing dependency: 'getImageFiles'. Either include it or remove the dependency array.",["342"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Drawer' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'NutritionTable' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'getSavedRecipes'. Either include it or remove the dependency array.",["343"],["344"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getPostReplies'. Either include it or remove the dependency array.",["345"],"React Hook useEffect has a missing dependency: 'getAllPosts'. Either include it or remove the dependency array.",["346"],["347"],"'FavoriteIcon' is defined but never used.","'Avatar' is defined but never used.","'StyledRating' is assigned a value but never used.","'classes' is assigned a value but never used.",["336"],["337"],"'instances' is assigned a value but never used.",["348"],"no-global-assign","no-unsafe-negation",{"desc":"349","fix":"350"},{"desc":"349","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"358","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"361","fix":"365"},{"desc":"361","fix":"366"},"Update the dependencies array to be: [clearErrors, error, isAuthenticated, props.history, setAlert]",{"range":"367","text":"368"},{"range":"369","text":"368"},"Update the dependencies array to be: [addPost, addPostReply, addRecipeRecommendation, newImageFile, pubsub]",{"range":"370","text":"371"},"Update the dependencies array to be: [getRatings, getReccomendedRecipes]",{"range":"372","text":"373"},"Update the dependencies array to be: [getImageFiles]",{"range":"374","text":"375"},"Update the dependencies array to be: [getSavedRecipes]",{"range":"376","text":"377"},{"range":"378","text":"377"},"Update the dependencies array to be: [getPostReplies]",{"range":"379","text":"380"},"Update the dependencies array to be: [getAllPosts]",{"range":"381","text":"382"},{"range":"383","text":"380"},{"range":"384","text":"380"},[740,779],"[clearErrors, error, isAuthenticated, props.history, setAlert]",[587,626],[1498,1500],"[addPost, addPostReply, addRecipeRecommendation, newImageFile, pubsub]",[768,770],"[getRatings, getReccomendedRecipes]",[1262,1264],"[getImageFiles]",[2520,2522],"[getSavedRecipes]",[2262,2264],[576,578],"[getPostReplies]",[791,793],"[getAllPosts]",[959,961],[992,994]]